- name: Install Uptime Kuma
  hosts: Moria
  tasks:
  - name: Create Uptime Kuma data Docker volume directory
    become: true
    ansible.builtin.file:
      path: /data/uptime-kuma-data
      state: directory
  - name: Create Uptime Kuma data Docker volume
    community.docker.docker_volume:
      volume_name: uptime-kuma-data
      driver: local
      driver_options:
        type: none
        o: bind
        device: /data/uptime-kuma-data
      state: present

  - name: Copy Nginx config file for Uptime Kuma
    become: true
    ansible.builtin.copy:
      src: src/nginx.conf
      dest: /data/nginx-config/uptime_kuma.conf
      mode: preserve

  - name: Read homelab config
    ansible.builtin.slurp:
      src: '{{ansible_user_dir}}/.homelab.json'
    register: homelab_config_file
  - name: Set homelab_config variable
    ansible.builtin.set_fact:
      homelab_config: '{{homelab_config_file.content|b64decode|from_json}}'

  - name: Insert into Postgres table service
    community.postgresql.postgresql_query:
      login_host: '{{homelab_config.database.host}}'
      login_user: '{{homelab_config.database.user}}'
      login_password: '{{homelab_config.database.password}}'
      db: '{{homelab_config.database.name}}'
      query: 'INSERT INTO service (name, host, config) VALUES (%s, %s, %s) ON CONFLICT DO NOTHING;'
      positional_args:
      - '{{item.name}}'
      - '{{item.host}}'
      - '{{item.config}}'
    with_items:
    - {name: uptime_kuma, host: '{{ansible_hostname}}', config: null}
  - name: Insert into Postgres table service_port
    community.postgresql.postgresql_query:
      login_host: '{{homelab_config.database.host}}'
      login_user: '{{homelab_config.database.user}}'
      login_password: '{{homelab_config.database.password}}'
      db: '{{homelab_config.database.name}}'
      query: 'INSERT INTO service_port (service, port, domain, reverse_proxy, reverse_proxy_port) VALUES (%s, %s, %s, %s, %s) ON CONFLICT DO NOTHING;'
      positional_args:
      - '{{item.service}}'
      - '{{item.port}}'
      - '{{item.domain}}'
      - '{{item.reverse_proxy}}'
      - '{{item.reverse_proxy_port}}'
    with_items:
    - {service: uptime_kuma, port: 10001, domain: null, reverse_proxy: nginx_moria, reverse_proxy_port: 443}
  - name: Insert into Postgres table service_data
    community.postgresql.postgresql_query:
      login_host: '{{homelab_config.database.host}}'
      login_user: '{{homelab_config.database.user}}'
      login_password: '{{homelab_config.database.password}}'
      db: '{{homelab_config.database.name}}'
      query: 'INSERT INTO service_data (service, data_name, storage_type, source) VALUES (%s, %s, %s, %s) ON CONFLICT DO NOTHING;'
      positional_args:
      - '{{item.service}}'
      - '{{item.data_name}}'
      - '{{item.storage_type}}'
      - '{{item.source}}'
    with_items:
    - {service: uptime_kuma, data_name: data, storage_type: docker, source: uptime-kuma-data}
