- name: Create Nextcloud Postgres user
  community.postgresql.postgresql_user:
    login_host: localhost
    login_user: postgres
    login_password: '{{config.postgres_password}}'
    login_db: postgres
    name: nextcloud
    password: '{{config.nextcloud_postgres_password}}'
    state: present
- name: Create Nextcloud Postgres database
  community.postgresql.postgresql_db:
    login_host: localhost
    login_user: postgres
    login_password: '{{config.postgres_password}}'
    maintenance_db: postgres
    name: nextcloud
    owner: nextcloud
    state: present

- name: Create Nextcloud Docker volume
  vars:
    volume_name: homelab-nextcloud-data
  ansible.builtin.import_tasks: ../util/create_docker_volume.yaml
- name: Start Nextcloud Docker container
  community.docker.docker_container:
    name: homelab-nextcloud-bootstrap
    image: nextcloud:latest
    pull: true
    env:
      OVERWRITEHOST: nextcloud.homelab.net
      OVERWRITEPROTOCOL: https
      #OVERWRITEWEBROOT: /nextcloud
      OVERWRITECLIURL: https://nextcloud.homelab.net
      POSTGRES_HOST: postgres
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: '{{config.nextcloud_postgres_password}}'
    volumes:
    - homelab-nextcloud-data:/var/www/html
    - /etc/localtime:/etc/localtime:ro
    networks:
    - name: homelab-postgres-bootstrap
    published_ports:
    - 8001:80
    auto_remove: true
    keep_volumes: false
    state: started
- name: Wait for Nextcloud to come online
  ansible.builtin.wait_for:
    host: localhost
    port: 8001
    state: started
- name: Wait for confirmation
  ansible.builtin.pause:
    prompt: Go to https://nextcloud.homelab.net and finish Nextcloud setup

- name: Stop Nextcloud Docker container
  community.docker.docker_container:
    name: homelab-nextcloud-bootstrap
    state: absent
