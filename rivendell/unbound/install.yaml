- name: Install Unbound
  hosts: Rivendell
  tasks:
  - name: Create temporary build directory
    ansible.builtin.tempfile:
      state: directory
    register: build_dir
  - name: Copy build files to build directory
    ansible.builtin.copy:
      src: build/
      dest: '{{build_dir.path}}'
      mode: preserve

  - name: Build Unbound Docker image
    community.docker.docker_image:
      name: unbound
      tag: latest
      build:
        path: '{{build_dir.path}}'
        pull: true
      source: build
      force_source: true
      state: present

  - name: Remove temporary build directory
    ansible.builtin.file:
      path: '{{build_dir.path}}'
      state: absent

  - name: Read homelab config
    ansible.builtin.slurp:
      src: '{{ansible_user_dir}}/.homelab.json'
    register: homelab_config_file
  - name: Set homelab_config variable
    ansible.builtin.set_fact:
      homelab_config: '{{homelab_config_file.content|b64decode|from_json}}'

  - name: Get Postgres user dns password
    no_log: false
    community.postgresql.postgresql_query:
      login_host: '{{homelab_config.database.host}}'
      login_user: '{{homelab_config.database.user}}'
      login_password: '{{homelab_config.database.password}}'
      db: '{{homelab_config.database.name}}'
      query: "SELECT config->'users'->'dns'->'password' AS password FROM service WHERE name = %s;"
      positional_args:
      - postgres
    register: postgres_dns_password_query
  - name: Set postgres_dns_password variable
    ansible.builtin.set_fact:
      postgres_dns_password: '{{postgres_dns_password_query.query_result[0].password}}'

  - name: Insert into Postgres table service
    vars:
      unbound_config:
        postgres:
          password: '{{postgres_dns_password}}'
    community.postgresql.postgresql_query:
      login_host: '{{homelab_config.database.host}}'
      login_user: '{{homelab_config.database.user}}'
      login_password: '{{homelab_config.database.password}}'
      db: '{{homelab_config.database.name}}'
      query: 'INSERT INTO service (name, host, config) VALUES (%s, %s, %s) ON CONFLICT DO NOTHING;'
      positional_args:
      - '{{item.name}}'
      - '{{item.host}}'
      - '{{item.config}}'
    with_items:
    - {name: unbound_rivendell, host: '{{ansible_hostname}}', config: '{{unbound_config|to_json}}'}
  - name: Insert into Postgres table service_port
    community.postgresql.postgresql_query:
      login_host: '{{homelab_config.database.host}}'
      login_user: '{{homelab_config.database.user}}'
      login_password: '{{homelab_config.database.password}}'
      db: '{{homelab_config.database.name}}'
      query: 'INSERT INTO service_port (service, port, domain, reverse_proxy, reverse_proxy_port) VALUES (%s, %s, %s, %s, %s) ON CONFLICT DO NOTHING;'
      positional_args:
      - '{{item.service}}'
      - '{{item.port}}'
      - '{{item.domain}}'
      - '{{item.reverse_proxy}}'
      - '{{item.reverse_proxy_port}}'
    with_items:
    - {service: unbound_rivendell, port: 53, domain: null, reverse_proxy: null, reverse_proxy_port: null}
