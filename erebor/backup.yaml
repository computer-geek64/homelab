- name: Backup
  hosts: Erebor
  vars:
    borg_user: borg
    borg_host: borg.ashishdsouza.com
    borg_ssh_key_path: '{{ansible_user_dir}}/.ssh/borg_id_rsa'
    borg_repo_path: /backup/borg/services
    borg_command_flags:
      - -c 60
  vars_prompt:
    - name: service_name
      prompt: Enter service name
      private: false
    - name: borg_archive_name
      prompt: Enter Borg archive name
      private: false
    - name: borg_archive_comment
      prompt: Enter Borg archive comment
      private: false
    - name: borg_password
      prompt: Enter Borg password
  tasks:
    - name: Read homelab config
      ansible.builtin.slurp:
        src: '{{ansible_user_dir}}/.homelab.json'
      register: homelab_config_file
    - name: Set homelab_config variable
      ansible.builtin.set_fact:
        homelab_config: '{{homelab_config_file.content|b64decode|from_json}}'

    - name: Query service data
      community.postgresql.postgresql_query:
        login_host: '{{homelab_config.database.host}}'
        login_user: '{{homelab_config.database.user}}'
        login_password: '{{homelab_config.database.password}}'
        db: '{{homelab_config.database.name}}'
        query: "SELECT storage_type, source FROM service_data WHERE service = '{{service_name}}';"
      register: service_data_query

    - name: Get Docker volume paths
      community.docker.docker_volume_info:
        name: '{{item.source}}'
      when: item.storage_type == 'docker'
      loop: '{{service_data_query.query_result}}'
      register: volumes_info

    - name: Add comment to Borg command flags
      vars:
        borg_command_comment_flag: "--comment '{{borg_archive_comment}}'"
      ansible.builtin.set_fact:
        borg_command_flags: '{{borg_command_flags + [borg_command_comment_flag]}}'
      when: borg_archive_comment

    - name: Set Borg command
      ansible.builtin.set_fact:
        borg_command: 'borg create {{borg_command_flags | join(" ")}} {{borg_user}}@{{borg_host}}:{{borg_repo_path}}/{{service_name}}::{{borg_archive_name if borg_archive_name else ansible_date_time.epoch}}'

    - name: Add paths to command
      ansible.builtin.set_fact:
        borg_command: "{{borg_command}} '{{item.source}}'"
      when: item.storage_type == 'path'
      loop: '{{service_data_query.query_result}}'

    - name: Add Docker volume paths to command
      ansible.builtin.set_fact:
        borg_command: "{{borg_command}} '{{item.volume.Options.device}}'"
      when: item.volume.Options.type == 'none'
      loop: '{{volumes_info.results}}'

    - name: Run Borg backup
      environment:
        BORG_RSH: "ssh -i '{{borg_ssh_key_path}}' -o 'ServerAliveInterval=15' -o 'ServerAliveCountMax=4' -o 'StrictHostKeyChecking=no'"
        BORG_PASSPHRASE: '{{borg_password}}'
        BORG_RELOCATED_REPO_ACCESS_IS_OK: 'yes'
      become: true
      ansible.builtin.command:
        cmd: '{{borg_command}}'
